[{"/Users/etakahashi/react-ws/persol-react-training/task_app_ts/src/index.tsx":"1","/Users/etakahashi/react-ws/persol-react-training/task_app_ts/src/reportWebVitals.ts":"2","/Users/etakahashi/react-ws/persol-react-training/task_app_ts/src/App.tsx":"3"},{"size":500,"mtime":1645665870065,"results":"4","hashOfConfig":"5"},{"size":425,"mtime":1645665870065,"results":"6","hashOfConfig":"5"},{"size":1939,"mtime":1646102113127,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","suppressedMessages":"10","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"6r8l5j",{"filePath":"11","messages":"12","suppressedMessages":"13","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"14","messages":"15","suppressedMessages":"16","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"17"},"/Users/etakahashi/react-ws/persol-react-training/task_app_ts/src/index.tsx",[],[],"/Users/etakahashi/react-ws/persol-react-training/task_app_ts/src/reportWebVitals.ts",[],[],"/Users/etakahashi/react-ws/persol-react-training/task_app_ts/src/App.tsx",["18"],[],"import React, {useState, useEffect} from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport axios from 'axios';\n\n\n//const taskUrl = 'http://localhost/api/v1/tasks';\nconst taskUrl = 'https://jsonplaceholder.typicode.com/todos';\n\n\n// function App() {\n//   const [message, setMessage] = useState(\"\")\n\n//   useEffect(() => {\n//     fetch(taskUrl)\n//       .then(response => response.text())\n//       .then(message => {\n//         setMessage(message);\n//       });\n//   },[])\n//   return (\n//     <div className=\"App\">\n//         <header className=\"App-header\">\n//         <img src={logo} className=\"App-logo\" alt=\"logo\"/>\n//         </header>\n//         <body>\n//           <p>{\n//          message\n          \n//           }</p>\n//         </body>\n             \n//     </div>\n// )\n\n// }\n\n\nfunction App() {\n  const [todoList, setTodoList] = useState([]);\n  \n  useEffect(()=>{\n    const fetchData = async() => {\n      const response = await axios.get(taskUrl);\n      setTodoList(response.data);\n    };\n    fetchData();\n  }, []);\n\n  useEffect(() => {\n    console.log('レンダリング！')\n  },[]);\n\n  const inCompletedList = todoList.filter((todo: any) =>{\n    return !todo.completed;\n  });\n  const completedList = todoList.filter((todo: any) => {\n    return todo.completed;\n  });\n\n  return (\n    <>\n      <h1>Todo List</h1>\n      <textarea />\n      <button>Todoを追加する</button>\n      <h2>未完了TODOリスト</h2>\n      <ul>\n        {inCompletedList.map((todo: any)=>(\n          <li key={todo.id}>\n            {todo.title}\n            <button>{todo.completed ? \"未完了リストへ\": \"完了リストへ\"}</button>\n            <button>削除する</button>\n          </li>\n      ))}\n      </ul>\n\n      <h2>完了TODOリスト</h2>\n      <ul>\n        {completedList.map((todo: any)=>(\n          <li key={todo.id}>\n            {todo.title}\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n}\n\nexport default App;\n",{"ruleId":"19","severity":1,"message":"20","line":2,"column":8,"nodeType":"21","messageId":"22","endLine":2,"endColumn":12},"@typescript-eslint/no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar"]