{"ast":null,"code":"var _jsxFileName = \"/Users/etakahashi/react-ws/persol-react-training/task_app_ts/src/App.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst taskUrl = 'http://localhost/api/v1/tasks';\n\nfunction App() {\n  _s();\n\n  const [todoList, setTodoList] = useState([]);\n  useEffect(() => {\n    const fetchData = async () => {\n      const response = await axios.get(taskUrl);\n      setTodoList(response.data);\n    };\n\n    fetchData();\n  }, []);\n  const inCompletedList = todoList.filter(todo => {// return !todo.done;\n  });\n  const completedList = todoList.filter(todo => {// return todo.done;\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Todo List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"add Todo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\u672A\\u5B8C\\u4E86TODO\\u30EA\\u30B9\\u30C8\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\u5B8C\\u4E86TODO\\u30EA\\u30B9\\u30C8\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(App, \"hGGsNTuaOn7oyphipNa0xsYj1Yc=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/etakahashi/react-ws/persol-react-training/task_app_ts/src/App.tsx"],"names":["React","useState","useEffect","axios","taskUrl","App","todoList","setTodoList","fetchData","response","get","data","inCompletedList","filter","todo","completedList"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AAGA,MAAMC,OAAO,GAAG,+BAAhB;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BN,QAAQ,CAAC,EAAD,CAAxC;AAEAC,EAAAA,SAAS,CAAC,MAAI;AACZ,UAAMM,SAAS,GAAG,YAAW;AAC3B,YAAMC,QAAQ,GAAG,MAAMN,KAAK,CAACO,GAAN,CAAUN,OAAV,CAAvB;AACAG,MAAAA,WAAW,CAACE,QAAQ,CAACE,IAAV,CAAX;AACD,KAHD;;AAIAH,IAAAA,SAAS;AACV,GANQ,EAMN,EANM,CAAT;AAQA,QAAMI,eAAe,GAAGN,QAAQ,CAACO,MAAT,CAAiBC,IAAD,IAAS,CAC/C;AACD,GAFuB,CAAxB;AAGA,QAAMC,aAAa,GAAGT,QAAQ,CAACO,MAAT,CAAiBC,IAAD,IAAU,CAC9C;AACD,GAFqB,CAAtB;AAIA,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF,eAKE;AAAA;AAAA;AAAA;AAAA,YALF,eAeE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAfF,eAgBE;AAAA;AAAA;AAAA;AAAA,YAhBF;AAAA,kBADF;AA0BD;;GA5CQT,G;;KAAAA,G;AA8CT,eAAeA,GAAf","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport axios from 'axios';\n\n\nconst taskUrl = 'http://localhost/api/v1/tasks';\n\nfunction App() {\n  const [todoList, setTodoList] = useState([]);\n  \n  useEffect(()=>{\n    const fetchData = async() => {\n      const response = await axios.get(taskUrl);\n      setTodoList(response.data);\n    };\n    fetchData();\n  }, []);\n\n  const inCompletedList = todoList.filter((todo) =>{\n    // return !todo.done;\n  });\n  const completedList = todoList.filter((todo) => {\n    // return todo.done;\n  });\n\n  return (\n    <>\n      <h1>Todo List</h1>\n      <textarea />\n      <button>add Todo</button>\n      <h2>未完了TODOリスト</h2>\n      <ul>\n        {/* {inCompletedList.map((todo)=>(\n          <li key={todo.id}>\n            {todo.content}\n            <button>{todo.done ? \"未完了リストへ\": \"完了リストへ\"}</button>\n            <button>delete</button>\n          </li>\n      ))} */}\n      </ul>\n\n      <h2>完了TODOリスト</h2>\n      <ul>\n        {/* {completedList.map((todo)=>(\n          <li key={todo.id}>\n            {todo.content}\n          </li>\n        ))} */}\n      </ul>\n    </>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}