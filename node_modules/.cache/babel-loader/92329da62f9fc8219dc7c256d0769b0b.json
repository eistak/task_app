{"ast":null,"code":"var _jsxFileName = \"/Users/etakahashi/react-ws/persol-react-training/task_app_ts/src/App.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport axios from 'axios'; //const taskUrl = 'http://localhost/api/v1/tasks';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst taskUrl = 'https://jsonplaceholder.typicode.com/todos'; // function App() {\n//   const [message, setMessage] = useState(\"\")\n//   useEffect(() => {\n//     fetch(taskUrl)\n//       .then(response => response.text())\n//       .then(message => {\n//         setMessage(message);\n//       });\n//   },[])\n//   return (\n//     <div className=\"App\">\n//         <header className=\"App-header\">\n//         <img src={logo} className=\"App-logo\" alt=\"logo\"/>\n//         </header>\n//         <body>\n//           <p>{\n//          message\n//           }</p>\n//         </body>\n//     </div>\n// )\n// }\n\nfunction App() {\n  _s();\n\n  const [todoList, setTodoList] = useState([]);\n  useEffect(() => {\n    const fetchData = async () => {\n      const response = await axios.get(taskUrl);\n      setTodoList(response.data);\n    };\n\n    fetchData();\n  }, []);\n  const inCompletedList = todoList.filter(todo => {\n    return !todo.completed;\n  });\n  const completedList = todoList.filter(todo => {\n    return todo.completed;\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Todo List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"Todo\\u3092\\u8FFD\\u52A0\\u3059\\u308B\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\u672A\\u5B8C\\u4E86TODO\\u30EA\\u30B9\\u30C8\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: inCompletedList.map(todo => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [todo.title, /*#__PURE__*/_jsxDEV(\"button\", {\n          children: todo.completed ? \"未完了リストへ\" : \"完了リストへ\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"\\u524A\\u9664\\u3059\\u308B\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }, this)]\n      }, todo.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\u5B8C\\u4E86TODO\\u30EA\\u30B9\\u30C8\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: completedList.map(todo => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: todo.title\n      }, todo.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(App, \"hGGsNTuaOn7oyphipNa0xsYj1Yc=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/etakahashi/react-ws/persol-react-training/task_app_ts/src/App.tsx"],"names":["React","useState","useEffect","axios","taskUrl","App","todoList","setTodoList","fetchData","response","get","data","inCompletedList","filter","todo","completed","completedList","map","title","id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AAEA,OAAO,WAAP;AACA,OAAOC,KAAP,MAAkB,OAAlB,C,CAGA;;;;AACA,MAAMC,OAAO,GAAG,4CAAhB,C,CAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;;AAGA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BN,QAAQ,CAAC,EAAD,CAAxC;AAEAC,EAAAA,SAAS,CAAC,MAAI;AACZ,UAAMM,SAAS,GAAG,YAAW;AAC3B,YAAMC,QAAQ,GAAG,MAAMN,KAAK,CAACO,GAAN,CAAUN,OAAV,CAAvB;AACAG,MAAAA,WAAW,CAACE,QAAQ,CAACE,IAAV,CAAX;AACD,KAHD;;AAIAH,IAAAA,SAAS;AACV,GANQ,EAMN,EANM,CAAT;AAQA,QAAMI,eAAe,GAAGN,QAAQ,CAACO,MAAT,CAAiBC,IAAD,IAAc;AACpD,WAAO,CAACA,IAAI,CAACC,SAAb;AACD,GAFuB,CAAxB;AAGA,QAAMC,aAAa,GAAGV,QAAQ,CAACO,MAAT,CAAiBC,IAAD,IAAe;AACnD,WAAOA,IAAI,CAACC,SAAZ;AACD,GAFqB,CAAtB;AAIA,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF,eAKE;AAAA,gBACGH,eAAe,CAACK,GAAhB,CAAqBH,IAAD,iBACnB;AAAA,mBACGA,IAAI,CAACI,KADR,eAEE;AAAA,oBAASJ,IAAI,CAACC,SAAL,GAAiB,SAAjB,GAA4B;AAArC;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHF;AAAA,SAASD,IAAI,CAACK,EAAd;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA,YALF,eAeE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAfF,eAgBE;AAAA,gBACGH,aAAa,CAACC,GAAd,CAAmBH,IAAD,iBACjB;AAAA,kBACGA,IAAI,CAACI;AADR,SAASJ,IAAI,CAACK,EAAd;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA,YAhBF;AAAA,kBADF;AA0BD;;GA5CQd,G;;KAAAA,G;AA8CT,eAAeA,GAAf","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport axios from 'axios';\n\n\n//const taskUrl = 'http://localhost/api/v1/tasks';\nconst taskUrl = 'https://jsonplaceholder.typicode.com/todos';\n\n\n// function App() {\n//   const [message, setMessage] = useState(\"\")\n\n//   useEffect(() => {\n//     fetch(taskUrl)\n//       .then(response => response.text())\n//       .then(message => {\n//         setMessage(message);\n//       });\n//   },[])\n//   return (\n//     <div className=\"App\">\n//         <header className=\"App-header\">\n//         <img src={logo} className=\"App-logo\" alt=\"logo\"/>\n//         </header>\n//         <body>\n//           <p>{\n//          message\n          \n//           }</p>\n//         </body>\n             \n//     </div>\n// )\n\n// }\n\n\nfunction App() {\n  const [todoList, setTodoList] = useState([]);\n  \n  useEffect(()=>{\n    const fetchData = async() => {\n      const response = await axios.get(taskUrl);\n      setTodoList(response.data);\n    };\n    fetchData();\n  }, []);\n\n  const inCompletedList = todoList.filter((todo: any) =>{\n    return !todo.completed;\n  });\n  const completedList = todoList.filter((todo: any) => {\n    return todo.completed;\n  });\n\n  return (\n    <>\n      <h1>Todo List</h1>\n      <textarea />\n      <button>Todoを追加する</button>\n      <h2>未完了TODOリスト</h2>\n      <ul>\n        {inCompletedList.map((todo: any)=>(\n          <li key={todo.id}>\n            {todo.title}\n            <button>{todo.completed ? \"未完了リストへ\": \"完了リストへ\"}</button>\n            <button>削除する</button>\n          </li>\n      ))}\n      </ul>\n\n      <h2>完了TODOリスト</h2>\n      <ul>\n        {completedList.map((todo: any)=>(\n          <li key={todo.id}>\n            {todo.title}\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}